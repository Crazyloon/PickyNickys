{"version":3,"sources":["components/PictureInfoCard.jsx","components/Home.jsx","components/BrandLogo.jsx","components/Navigation.jsx","components/Footer.jsx","components/AnnouncementBanner.jsx","App.js","reportWebVitals.js","index.js"],"names":["PictureInfoCard","imgName","imgAlt","description","reverse","classInfoImg","className","src","process","alt","Home","Jumbotron","BrandLogo","location","useLocation","pathname","Navigation","page","onSelectPage","useState","menuOpen","setMenuOpen","onClick","exact","to","icon","faFilm","size","faClipboardList","faShoppingBasket","faBars","Footer","href","faFacebook","faInstagram","faTwitterSquare","AnnouncementBanner","title","details","classList","App","Container","fluid","style","paddingBottom","Row","Col","path","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.058e0e2e.chunk.js","sourcesContent":["import { imagePath } from '../constants/constants';\r\n\r\nconst PictureInfoCard = ({imgName, imgAlt, description, reverse}) => {\r\n  const classInfoImg = `picture-info-card${reverse ? \" flex-row-reverse\" : \"\"}`;\r\n\r\n  return ( \r\n    <div className={classInfoImg}>\r\n      <div className=\"picture-info-card-image\">\r\n        <img src={`${process.env.PUBLIC_URL}/images/${imgName}`} alt={imgAlt} />\r\n      </div>\r\n      <div className=\"picture-info-card-info\">\r\n        <p>{description}</p>\r\n      </div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default PictureInfoCard;","import { Jumbotron } from 'reactstrap';\r\nimport PictureInfoCard from \"./PictureInfoCard\";\r\n\r\nconst Home = () => {\r\n  return ( \r\n    <>\r\n      <img src=\"https://raw.githubusercontent.com/Crazyloon/PickyNickys/main/public/images/brand_full.jpg\" className=\"hero\"/>\r\n      <Jumbotron className=\"bg-secondary-dark\">\r\n        <h1>Welcome to Picky Nicky's Bakery</h1>\r\n        <p className=\"lead\">I'm very picky about selecting the best ingredients for all of my sweets, so I can provide happiness with every bite.</p>\r\n        <hr className=\"my-2\" />\r\n        <p>I share all of my recipies so you can make the best of Picky Nicky's for your family.</p>\r\n        <button className=\"button button-primary\">Latest Recipies</button>\r\n      </Jumbotron>\r\n      <PictureInfoCard imgName=\"chocolate_chip_cookies.jpg\" imgAlt=\"Extra Large Chocolate Chip Cookies\" description={'My extra large chocolate chip cookies are a dream come true. These are the first item I ever baked, before I knew there were any \"rules\" about standard cookie sizes. They don\\'t drive much of a profit, but provide a lot of happiness!'}/>\r\n      <PictureInfoCard imgName=\"chocolate_chip_cookies_02.jpg\" imgAlt=\"Chocolate Chip Cookies\" description={'Chocolate chip cookies are a staple in my kitchen. Everyone loves the decadent chocolate, soft walnuts and gooey texture of these famous morsels!'} reverse/>\r\n      <PictureInfoCard imgName=\"banana_bread.jpg\" imgAlt=\"Banana Bread with chocolate chips\" description={'Banana Bread is one of my favorite morning treats. It\\'s fantastic with a hot cup of Kopiko. I like to warm it up in the microwave for just a few seconds before spreading some butter on top'}/>\r\n    </>\r\n  );\r\n}\r\n \r\nexport default Home;","import { useLocation } from 'react-router-dom';\r\n\r\nconst BrandLogo = () => {\r\n  const location = useLocation();\r\n  const getBrandLogo = () => {\r\n    return location.pathname === \"/\" ? `${process.env.PUBLIC_URL}/images/brand_wide.png` : `${process.env.PUBLIC_URL}/images/brand_inverse_wide.png`;\r\n  }\r\n\r\n  return ( \r\n    <>\r\n      <img src={getBrandLogo()} alt=\"brand-logo\" className=\"brand-logo\" />\r\n    </>\r\n   );\r\n}\r\n \r\nexport default BrandLogo;","import React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars, faFilm, faClipboardList, faShoppingBasket } from '@fortawesome/free-solid-svg-icons'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport BrandLogo from \"./BrandLogo\";\r\n\r\nexport const Navigation = ({page, onSelectPage}) => {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  return (\r\n    <header className=\"navigation\">\r\n      <nav className=\"nav-bar\">\r\n        <ul className={\"nav-list\" + (menuOpen ? \" responsive\" : \"\")}>\r\n          <li className={\"nav-item-brand\"} onClick={() => setMenuOpen(false)}>\r\n            <NavLink exact to=\"/PickyNickys\" className=\"navigation-link nav-brand-name\">\r\n              <BrandLogo />\r\n            </NavLink>\r\n          </li>\r\n          <li className={\"nav-item\"} onClick={() => setMenuOpen(false)}>\r\n            <NavLink to=\"/videos\" className=\"navigation-link\">\r\n              <FontAwesomeIcon icon={faFilm} size={'1x'} />\r\n              Videos\r\n            </NavLink>\r\n          </li>\r\n          <li className={\"nav-item\"} onClick={() => setMenuOpen(false)}>\r\n            <NavLink to=\"/recipies\" className=\"navigation-link\">\r\n              <FontAwesomeIcon icon={faClipboardList} size={'1x'} />\r\n              Recipies\r\n            </NavLink>\r\n          </li>\r\n          <li className={\"nav-item\"} onClick={() => setMenuOpen(false)}>\r\n            <NavLink to=\"/order\" className=\"navigation-link\">\r\n              <FontAwesomeIcon icon={faShoppingBasket} size={'1x'} />\r\n              Order\r\n            </NavLink>\r\n          </li>\r\n          <li className={\"nav-toggle icon\"} onClick={() => setMenuOpen(!menuOpen)}>\r\n              <FontAwesomeIcon icon={faBars} size={'2x'} />\r\n          </li>\r\n        </ul>\r\n      </nav>\r\n    </header>\r\n  );\r\n};","import { faFacebook, faInstagram, faTwitterSquare } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\r\n\r\nconst Footer = () => {\r\n  return ( \r\n    <div className=\"footer\">\r\n      <div className=\"footer-copyright\">\r\n        &copy; 2021 Picky Nicky's\r\n      </div>\r\n      <div className=\"footer-social\">\r\n        <a href=\"https://www.facebook.com/Picky-Nickys-106097991002314/\">\r\n          <FontAwesomeIcon className=\"fb\" icon={faFacebook} size=\"2x\"/>\r\n        </a>\r\n        <FontAwesomeIcon className=\"ig\" icon={faInstagram} size=\"2x\" />\r\n        <FontAwesomeIcon className=\"tw\" icon={faTwitterSquare} size=\"2x\" />\r\n      </div>\r\n      <div className=\"footer-location\">Cebu City, Philippines</div>\r\n    </div>\r\n   );\r\n}\r\n \r\nexport default Footer;","const AnnouncementBanner = ({title, details, classList}) => {\r\n  return ( \r\n    <div className={\"announcement-banner \" + classList}>\r\n      <h1>{title}</h1>\r\n      {details ? <p>{details}</p> : null}\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default AnnouncementBanner;","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport { Navigation } from \"./components/Navigation\";\nimport {Container, Row, Col} from 'reactstrap';\nimport { BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport Footer from \"./components/Footer\";\nimport AnnouncementBanner from \"./components/AnnouncementBanner\";\n\nconst App = () => {\n\n  return (\n    <Router>\n      <Navigation/>\n      <AnnouncementBanner title=\"Coming Soon!\" details=\"(Limited orders available)\" classList=\"pink-banner\"/>\n      <Container fluid=\"md\" style={{paddingBottom: \"65px\"}}>\n        <Row>\n          <Col>\n            <Switch>\n              <Router exact path=\"/PickyNickys\">\n                <Home />\n              </Router>\n              <Router path=\"/videos\">\n                <div style={{color: \"var(--primary-dark)\"}}>\n                  <AnnouncementBanner title=\"This Page is Under Development\" />\n                </div>\n              </Router>\n              <Router path=\"/recipies\">\n                <div style={{color: \"var(--primary-dark)\"}}>\n                  <AnnouncementBanner title=\"This Page is Under Development\" />\n                </div>\n              </Router>\n              <Router path=\"/order\">\n                <div style={{color: \"var(--primary-dark)\"}}>\n                  <AnnouncementBanner title=\"This Page is Under Development\" />\n                </div>\n              </Router>\n            </Switch>\n          </Col>\n        </Row>\n      </Container>\n      <Footer />\n    </Router>\n  );\n};\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}